[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ani-mm"
version = "0.2.0"
description = "TorchANI + OpenMM molecular modeling utilities"
readme = "README.md"
authors = [
  { name = "Nick Terrel", email = "nickterrel4@gmail.com" }
]
license = { text = "MIT" }
requires-python = ">=3.9"
keywords = ["molecular-dynamics", "openmm", "ani", "torchani", "ase"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Chemistry",
]
# Minimum core dependencies; torch installed separately to allow GPU-specific wheels.
dependencies = [
  "openmm>=8.0.0",
  "ase>=3.22.1",
  "numpy>=1.23",
  "typing-extensions>=4.5"
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4",
  "pytest-cov>=4.1",
  "ruff>=0.5.0",
  "mypy>=1.7.0",
  "black>=24.0.0",
  "isort>=5.12.0"
]

# TorchANI direct from GitHub main branch (can pin commit SHA instead of 'main')
ml = [
  "torchani @ git+https://github.com/aiqm/torchani.git@main",
]

docs = [
  "mkdocs>=1.6.0",
  "mkdocs-material>=9.5.0",
  "mkdocstrings[python]>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/nterrel/ani-mm"
Issues = "https://github.com/nterrel/ani-mm/issues"

[project.scripts]
ani-mm = "animm.cli:main"

[tool.setuptools.packages.find]
where = ["."]

[tool.black]
# Exclude the 'external' directory from formatting
exclude = '''
(
    ^/external/
)
'''
line-length = 100
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
exclude = [
    "external",
]
line-length = 100
select = ["E", "F", "I"]
ignore = ["F401", "E402", "E501"]  # ignore unused-import warnings globally (user request)

[tool.pytest.ini_options]
minversion = "7.0"
# Quieter default test output:
#  - keep coverage but use 'term' (no per-missing-line dump)
#  - retain -q for compact progress
# To get full detail (missing lines + skipped summary):
#     pytest --cov=animm --cov-report=term-missing -ra
# To run fastest (no coverage):
#     pytest -q --no-cov
addopts = "-q --cov=animm --cov-report=term"
filterwarnings = [
  "ignore:.*builtin type (SwigPyPacked|SwigPyObject|swigvarlink) has no __module__ attribute:DeprecationWarning",
  "ignore::DeprecationWarning:importlib._bootstrap",
  "ignore::DeprecationWarning:importlib._bootstrap_external",
]

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
